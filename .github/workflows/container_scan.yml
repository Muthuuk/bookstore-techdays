name: Container Image Scan

on:
  registry_package:

  # Trigger container scanning on completion of workflows that build containers
  workflow_run:
    workflows:
      - "Build - Test - Publish"
    types:
      - completed

jobs:
  get_containers:
    name: Get Containers

    # Exclude dependabot changes from container scanning as we do not build containers for these PRs.
    if: github.actor != 'dependabot[bot]'

    runs-on: ubuntu-20.04

    outputs:
      containers: ${{ steps.container_images.outputs.containers }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Container Images from Commit Status
        id: container_images
        uses: actions/github-script@v4.0.2
        with:
          script: |
            core.startGroup('context');
            core.info(JSON.stringify(context, null, 2));
            core.endGroup();

            const statuses = await github.repos.getCombinedStatusForRef({
                ...context.repo,
                ref: context.sha
            }).then(status => {
                if (status.data.statuses) {
                    return status.data.statuses.filter(status => {
                        return status.context.startsWith('Container Image Published');
                    });
                }
                return null;
            });

            core.startGroup('statuses');
            core.info(JSON.stringify(statuses, null, 2));
            core.endGroup();

            const containers = [];
            if (statuses) {
                statuses.forEach(status => {
                  containers.push(status.description);
                });
            }

            if (containers.length > 0) {
              const payload = JSON.stringify({container: containers});
              core.setOutput('containers', payload);
              core.info(`Containers found: ${payload}`);
            } else {
              core.setFailed(`No container images associated with commit`);
            }


  anchor_container_scan:
    name: Anchor container image scan
    runs-on: ubuntu-20.04

    needs:
      - get_containers

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get_containers.outputs.containers) }}

    steps:
      - name: Sign in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: octodemobot
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Scan Container Image
        uses: anchore/scan-action@v2.0.4
        with:
          image: ghcr.io/${{ github.repository_owner }}/${{ matrix.container }}
          debug: false
          acs-report-enable: true

      - name: Display SARIF report data
        run: cat results.sarif

      - name: Upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif


  trivy_container_scan:
    name: Trivy container image scan

    runs-on: ubuntu-20.04

    needs:
      - get_containers

    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.get_containers.outputs.containers) }}

    steps:
      - name: Sign in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: octodemobot
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch container
        run:
          docker pull ghcr.io/${{ github.repository_owner }}/${{ matrix.container }}

      - name: Run Trivy vulnerability scanner
        id: container_scan
        uses: aquasecurity/trivy-action@0.0.18
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/${{ matrix.container }}
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: trivy-results.sarif
